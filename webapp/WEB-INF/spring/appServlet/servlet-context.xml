<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
xmlns="http://www.springframework.org/schema/mvc"
xmlns:websocket="http://www.springframework.org/schema/websocket"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:task="http://www.springframework.org/schema/task"
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/mvc 
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/task 
<<<<<<< HEAD
http://www.springframework.org/schema/task/spring-task-3.1.xsd
http://www.springframework.org/schema/websocket 
http://www.springframework.org/schema/websocket/spring-websocket.xsd">
             
=======
http://www.springframework.org/schema/task/spring-task-3.1.xsd" >   


   
>>>>>>> Jinju
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<context:component-scan base-package="kr.co.AMS" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	
	<!-- Tiles 설정 하기  -->
	<beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<!--Tiles를 구성하는 xml 파일이 여러개 있을 수 있으므로 collection 제공  -->
			<beans:list>
				<beans:value>/WEB-INF/spring/Tiles.xml</beans:value>			
			</beans:list>	
		</beans:property>
	</beans:bean>
	
	<!--Tiles의 Urlbase를 위한 viewResolve 설정하기  -->
	<beans:bean id="urlBasedViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>	
	</beans:bean>
	
<<<<<<< HEAD
	<!-- file upload 설정 -->
	<beans:bean id="uploadPath" class="java.lang.String">
		<beans:constructor-arg value="C:\\zzz\\upload">
		</beans:constructor-arg>
	</beans:bean>
	
	<!-- MultipartResolver 설정 -->
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760"></beans:property>
		</beans:bean>
		
		<!-- websocket handler 등록 -->
	
	<websocket:handlers>
		<websocket:mapping path="/websocket/echo.do"
			handler="myHandler" />
	</websocket:handlers>

	<beans:bean id="myHandler" class="kr.co.AMS.Controller.SocketHandler" />
=======
	
	<!-- JSON -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/> 
	
	
	<!--Spring_Mail관련 설정 -->
	
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<beans:property name="host" value="smtp.gmail.com" />
		<beans:property name="port" value="587" />
		<beans:property name="username" value="kostabeta2@gmail.com" />
		<beans:property name="password" value="zhtmxk123" />
		<beans:property name="javaMailProperties">
			<beans:props>
				<beans:prop key="mail.transport.protocol">smtp</beans:prop>
				<beans:prop key="mail.smtp.auth">true</beans:prop>
				<beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
				<beans:prop key="mail.debug">true</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
>>>>>>> Jinju

</beans:beans>
