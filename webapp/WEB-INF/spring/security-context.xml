<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xmlns:security="http://www.springframework.org/schema/security"
 xsi:schemaLocation="http://www.springframework.org/schema/beans 
 					 http://www.springframework.org/schema/beans/spring-beans.xsd
  					 http://www.springframework.org/schema/security 
  					 http://www.springframework.org/schema/security/spring-security.xsd">	 
  					 
    
	
	<!-- 4단계 권한 테스트_JDBC 연동, Security가 강제하는 테이블 구성(role 테이블), intercept-url의 pattern 사용			 
  	4단계 테스트를 위해서, notice.jsp페이지에 설정해둔 기존1을 사용해서 테스트 또는 
  	     role를 하나만 걸어서 테스트? 3번으로 테스트
  	 -->
  	<security:http>
		<security:csrf disabled="true"/>
		<security:form-login login-page="/member_login.ams"
                    authentication-success-handler-ref="loginSuccessHandler"
                    authentication-failure-handler-ref="loginFailureHandler"
                     authentication-failure-url="/member_login.ams?error"
                   />
		
		<!-- <security:form-login authentication-failure-url="/member_login.ams?error" login-page="/member_login.ams"/> -->
		
	    <!-- 로그인 시 에러에 대한 처리  -->
	    
	   <!--  로그아웃처리  -->
	    <security:logout logout-success-url="/index.ams"/>  
	    
	   <!--  security를 적용할 부분  -->
	    <!-- <security:intercept-url pattern="/index.ams" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')"/>   -->
		<security:intercept-url pattern="/anonymous*ams" access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />		
  		<security:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" /> <!-- admin 폴더 안의 하위 폴더까지 포함 -->
  		
  		<security:session-management>
            <security:concurrency-control max-sessions="1" expired-url="/login_duplicate"/>
        </security:session-management>
	</security:http>
	
	<bean id = "loginSuccessHandler" class="kr.co.AMS.Handler.LoginSuccessHandler" />
	<bean id = "loginFailureHandler" class="kr.co.AMS.Handler.LoginFailureHandler" />
	
	
	<security:authentication-manager>
	  <security:authentication-provider>
		<security:jdbc-user-service
			data-source-ref="driverManagerDataSource"
			users-by-username-query="select userid, password, 1 enabled from tb_member where userid=?"
			authorities-by-username-query=
			"select m.USERID , a.ROLE_NAME  
            from tb_member m join tb_authority a 
            on m.userid = a.userid 
            where m.userid=?" />
	  </security:authentication-provider>
	</security:authentication-manager>					 
  					  
  					 
  					 
</beans> 